const db = require('../db/database');
const crypto = require('crypto');

// –í—ã—á–∏—Å–ª–µ–Ω–∏–µ md5-—Ö–µ—à–∞ –¥–ª—è gravatar
function md5(str) {
  return crypto.createHash("md5").update(str.trim().toLowerCase()).digest("hex");
}

// –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–∑–∞–º–µ—Ç–∫–∏, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—â—ë –Ω–µ—Ç
async function createDemoNoteIfNone(userId) {
  try {
    const existing = await db.query(
      'SELECT id FROM notes WHERE user_id = $1 LIMIT 1',
      [userId]
    );

    if (existing.rows.length === 0) {
      await db.query(
        `INSERT INTO notes (user_id, title, text)
         VALUES ($1, $2, $3)`,
        [
          userId,
          'Demo',
          `
# üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!

–≠—Ç–æ –≤–∞—à–∞ **–¥–µ–º–æ-–∑–∞–º–µ—Ç–∫–∞**, –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω–∞—è –≤ **Markdown**. –í–æ—Ç –ø—Ä–∏–º–µ—Ä—ã:

## üî§ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

- **–ñ–∏—Ä–Ω—ã–π**
- _–ö—É—Ä—Å–∏–≤_
- ~~–ó–∞—á—ë—Ä–∫–Ω—É—Ç—ã–π~~
- [–°—Å—ã–ª–∫–∞](https://example.com)

## ‚úÖ –ß–µ–∫–±–æ–∫—Å—ã

- [x] –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å Markdown
- [ ] –°–æ–∑–¥–∞—Ç—å —Å–≤–æ—é –ø–µ—Ä–≤—É—é –∑–∞–º–µ—Ç–∫—É

## üìä –¢–∞–±–ª–∏—Ü–∞

| –ó–∞–¥–∞—á–∞       | –°—Ç–∞—Ç—É—Å |
|--------------|--------|
| –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è  | ‚úÖ     |
| –î–µ–º–æ-–∑–∞–º–µ—Ç–∫–∞ | ‚úÖ     |

–ü—Ä–∏—è—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã! ‚ú®
          `.trim(),
        ]
      );
    }
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–µ–º–æ-–∑–∞–º–µ—Ç–∫–∏:", err);
  }
}

// Middleware: –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ + user + gravatar + –¥–µ–º–æ-–∑–∞–º–µ—Ç–∫–∞
async function ensureAuth(req, res, next) {
  if (!req.session.userId) return res.redirect("/");

  try {
    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const result = await db.query(
      "SELECT username FROM users WHERE id = $1",
      [req.session.userId]
    );
    const user = result.rows[0];
    if (!user) return res.redirect("/");

    // –°–æ–∑–¥–∞—ë–º –¥–µ–º–æ-–∑–∞–º–µ—Ç–∫—É –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ
    await createDemoNoteIfNone(req.session.userId);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —à–∞–±–ª–æ–Ω
res.locals.user = {
  username: user.username,
  hash: md5( user.username || "default"),
};

    next();
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤ ensureAuth:", err);
    res.redirect("/");
  }
}

// Middleware: —Ä–µ–¥–∏—Ä–µ–∫—Ç –µ—Å–ª–∏ —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
function redirectIfAuth(req, res, next) {
  if (req.session.userId) return res.redirect("/dashboard");
  next();
}

module.exports = {
  ensureAuth,
  redirectIfAuth,
  createDemoNoteIfNone, // –µ—Å–ª–∏ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –æ—Ç–¥–µ–ª—å–Ω–æ
};
